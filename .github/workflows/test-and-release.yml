name: Test and Release

# Run this job on all pushes and pull requests
# as well as tags with a semantic version
on:
  push:
    branches:
      - "*"
    tags:
      # normal versions
      - "v[0-9]+.[0-9]+.[0-9]+"
      # pre-releases
      - "v[0-9]+.[0-9]+.[0-9]+-**"
  pull_request: { }

jobs:
  # Performs quick checks before the expensive test runs
  check-and-lint:
    if: contains(github.event.head_commit.message, '[skip ci]') == false

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 14.x ]

    steps:
      - uses: actions/checkout@v2.3.4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.5.0
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm ci

      - name: Lint source code
        run: npm run lint
      - name: Test package files
        run: npm run test:package

  # Runs adapter tests on all supported node versions and OSes
  adapter-tests:
    if: contains(github.event.head_commit.message, '[skip ci]') == false

    needs: [ check-and-lint ]

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [ 12.x, 14.x, 16.x ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.5.0
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:unit

      - name: Run integration tests (unix only)
        if: startsWith(runner.OS, 'windows') == false
        run: DEBUG=testing:* npm run test:integration

      - name: Run integration tests (windows only)
        if: startsWith(runner.OS, 'windows')
        run: set DEBUG=testing:* & npm run test:integration

  # Deploys the final package to NPM (only if commit includes a version tag !
  deploy:
    needs: [ adapter-tests ]

    # Trigger this step only when a commit on master is tagged with a version number
    if: |
      contains(github.event.head_commit.message, '[skip ci]') == false &&
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]

    steps:
      - uses: actions/checkout@v2.3.4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.5.0
        with:
          node-version: ${{ matrix.node-version }}

      - name: Publish package to npm
        run: |
          npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
          npm whoami
          npm publish

      - name: Notify Sentry.io about the release
        run: |
          npm i -g @sentry/cli
          export SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
          export SENTRY_URL=https://sentry.iobroker.net
          export SENTRY_ORG=iobroker
          export SENTRY_PROJECT=iobroker-ical
          export SENTRY_VERSION=iobroker.ical@${{ env.VERSION }}
          sentry-cli releases new $SENTRY_VERSION
          sentry-cli releases set-commits $SENTRY_VERSION --auto
          sentry-cli releases finalize $SENTRY_VERSION

        # Add the following line BEFORE finalize if sourcemap uploads are needed
        # sentry-cli releases files $SENTRY_VERSION upload-sourcemaps build/

  # Dummy job for skipped builds - without this, github reports the build as failed
  skip-ci:
    if: contains(github.event.head_commit.message, '[skip ci]')
    runs-on: ubuntu-latest
    steps:
      - name: Skip build
        run: echo "Build skipped!"
